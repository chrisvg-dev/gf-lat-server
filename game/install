#!/usr/bin/env bash

world_offset=3EA7A7
world_binary=WorldServer
world_folder=WorldServer

zone_offset=822D47
zone_binary=ZoneServer
zone_folder=ZoneServer

case "$1" in
full)
	host_ip=$(ip a | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
	if [ "$host_ip" != "" ]; then
		echo "1 - Use Current IP: $host_ip"
		echo "2 - Use Other IP:"
		read -p "Select Option: " invar
	else
		invar="2"
	fi
	if [ "$invar" = "2" ]; then
		read -p "Enter Your IP: " host_ip
	fi

	stty -echo
	read -p "Enter PostgreSQL Password: " db_pwd
	stty echo
	export PGPASSWORD=$db_pwd

	sudo apt purge postgresql -y
	sudo apt purge php-pgsql -y
	sudo apt purge php-cli -y
	sudo apt purge php -y
	sudo apt purge apache2 -y

	ip_parts=(${host_ip//./ })
	ip_parts[3]=0
	server_ip="${ip_parts[0]}.${ip_parts[1]}.${ip_parts[2]}.${ip_parts[3]}"

	hex_ip=""

	for char in $(echo "$server_ip" | grep -o .); do
		hex_ip+=$(printf '%02x' "'$char")
	done

	hex_ip+="000000000000"

	ip_bytes=$(echo $hex_ip | sed 's/\(..\)/\\\x\1/g')

	cp ${world_folder}/${world_binary} ${world_folder}/${world_binary}.bak

	echo -en $ip_bytes | dd of=${world_folder}/${world_binary} bs=1 seek=$((0x$world_offset)) count=${#ip_bytes} conv=notrunc >/dev/null 2>&1

	cp ${zone_folder}/${zone_binary} ${zone_folder}/${zone_binary}.bak

	echo -en $ip_bytes | dd of=${zone_folder}/${zone_binary} bs=1 seek=$((0x$zone_offset)) count=${#ip_bytes} conv=notrunc >/dev/null 2>&1

	sudo apt-get install apache2 -y
	sudo apt-get install php -y
	sudo apt-get install php-cli -y
	sudo apt-get install php-pgsql -y

	sudo service apache2 restart

	sudo rm /var/www/html/index.html
	sudo cp ./_utils/web/*.php /var/www/html/

	sed -i "/GameDBPassword/c\GameDBPassword=$db_pwd" "./setup.ini"
	sed -i "/AccountDBPW/c\AccountDBPW=$db_pwd" "./setup.ini"
	sed -i "/AccountDBPW/c\AccountDBPW=$db_pwd" "./GatewayServer/setup.ini"

	sed -i "s/db_pwd/$db_pwd/g" "/var/www/html/config.php"
	sed -i "s/host_ip/$host_ip/g" "/var/www/html/config.php"

	wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/pgsql.gpg >/dev/null
	echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list >/dev/null
	sudo apt-get update -y
	sudo apt -y install postgresql-13
	POSTGRESQLVERSION=$(psql --version | cut -c 19-20)

	cd "/etc/postgresql/$POSTGRESQLVERSION/main"
	sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" postgresql.conf
	sed -i "s+host    all             all             127.0.0.1/32            md5+host    all             all             0.0.0.0/0            md5+g" pg_hba.conf
	sed -i "s/local   all             postgres                                peer/local   all             postgres                                md5/g" pg_hba.conf
	sed -i "s/local   all             all                                     peer/local   all             all                                     md5/g" pg_hba.conf

	sudo -u postgres psql -c "ALTER user postgres WITH password '$db_pwd';"

	service postgresql restart

	chmod 777 /root -R

	psql -U postgres -c "create database gf_gs encoding 'UTF8' template template0;"
	psql -U postgres -c "create database gf_ls encoding 'UTF8' template template0;"
	psql -U postgres -c "create database gf_ms encoding 'UTF8' template template0;"
	psql -U postgres -d gf_gs -c "\i '/root/gf_server/_utils/db/gf_gs.sql';"
	psql -U postgres -d gf_ls -c "\i '/root/gf_server/_utils/db/gf_ls.sql';"
	psql -U postgres -d gf_ms -c "\i '/root/gf_server/_utils/db/gf_ms.sql';"
	psql -U postgres -d gf_ls -c "UPDATE worlds SET ip = '$host_ip';"
	psql -U postgres -d gf_gs -c "UPDATE serverstatus SET ext_address = '$host_ip' WHERE ext_address != 'none';"

	;;
ip)
	host_ip=$(ip a | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
	if [ "$host_ip" != "" ]; then
		echo "1 - Use Current IP: $host_ip"
		echo "2 - Use Other IP:"
		read -p "Select Option: " invar
	else
		invar="2"
	fi
	if [ "$invar" = "2" ]; then
		read -p "Enter Your IP: " host_ip
	fi

	stty -echo
	read -p "Enter PostgreSQL Password: " db_pwd
	stty echo
	export PGPASSWORD=$db_pwd

	sudo cp ./_utils/web/config.php /var/www/html

	sed -i "s/db_pwd/$db_pwd/g" "/var/www/html/config.php"
	sed -i "s/host_ip/$host_ip/g" "/var/www/html/config.php"

	ip_parts=(${host_ip//./ })
	ip_parts[3]=0
	server_ip="${ip_parts[0]}.${ip_parts[1]}.${ip_parts[2]}.${ip_parts[3]}"

	hex_ip=""

	for char in $(echo "$server_ip" | grep -o .); do
		hex_ip+=$(printf '%02x' "'$char")
	done

	hex_ip+="000000"

	ip_bytes=$(echo $hex_ip | sed 's/\(..\)/\\\x\1/g')

	cp ${world_folder}/${world_binary} ${world_folder}/${world_binary}.bak

	echo -en $ip_bytes | dd of=${world_folder}/${world_binary} bs=1 seek=$((0x$world_offset)) count=${#ip_bytes} conv=notrunc >/dev/null 2>&1

	cp ${zone_folder}/${zone_binary} ${zone_folder}/${zone_binary}.bak

	echo -en $ip_bytes | dd of=${zone_folder}/${zone_binary} bs=1 seek=$((0x$zone_offset)) count=${#ip_bytes} conv=notrunc >/dev/null 2>&1

	psql -U postgres -d gf_ls -c "UPDATE worlds SET ip = '$host_ip';"
	psql -U postgres -d gf_gs -c "UPDATE serverstatus SET ext_address = '$host_ip' WHERE ext_address != 'none';"

	;;
db)
	host_ip=$(ip a | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
	if [ "$host_ip" != "" ]; then
		read -p "1 - Use Current IP: $host_ip  or 2 - Use Other IP: " invar
	else
		invar="2"
	fi
	if [ "$invar" = "2" ]; then
		read -p "Enter Your IP: " host_ip
	fi

	stty -echo
	read -p "Enter PostgreSQL Password: " db_pwd
	stty echo
	export PGPASSWORD=$db_pwd

	psql -U postgres -c "DROP DATABASE gf_gs;"
	psql -U postgres -c "DROP DATABASE gf_ls;"
	psql -U postgres -c "DROP DATABASE gf_ms;"

	if ! [ $(psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='gf_gs'") ] && ! [ $(psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='gf_ls'") ] && ! [ $(psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='gf_ms'") ]; then
		chmod 777 /root -R
		psql -U postgres -c "create database gf_gs encoding 'UTF8' template template0;"
		psql -U postgres -c "create database gf_ls encoding 'UTF8' template template0;"
		psql -U postgres -c "create database gf_ms encoding 'UTF8' template template0;"
		psql -U postgres -d gf_gs -c "\i '/root/gf_server/_utils/db/gf_gs.sql';"
		psql -U postgres -d gf_ls -c "\i '/root/gf_server/_utils/db/gf_ls.sql';"
		psql -U postgres -d gf_ms -c "\i '/root/gf_server/_utils/db/gf_ms.sql';"
		psql -U postgres -d gf_ls -c "UPDATE worlds SET ip = '$host_ip';"
		psql -U postgres -d gf_gs -c "UPDATE serverstatus SET ext_address = '$host_ip' WHERE ext_address != 'none';"
	else
		echo $R"Close All DB Connections!"$W
	fi

	;;
web)

	host_ip=$(ip a | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
	if [ "$host_ip" != "" ]; then
		echo "1 - Use Current IP: $host_ip"
		echo "2 - Use Other IP:"
		read -p "Select Option: " invar
	else
		invar="2"
	fi
	if [ "$invar" = "2" ]; then
		read -p "Enter Your IP: " host_ip
	fi

	stty -echo
	read -p "Enter PostgreSQL Password: " db_pwd
	stty echo

	sudo apt-get install apache2 -y
	sudo apt-get install php -y
	sudo apt-get install php-cli -y
	sudo apt-get install php-pgsql -y

	sudo service apache2 restart

	sudo rm /var/www/html/index.html
	sudo cp ./_utils/web/*.php /var/www/html/

	sed -i "s/db_pwd/$db_pwd/g" "/var/www/html/config.php"
	sed -i "s/host_ip/$host_ip/g" "/var/www/html/config.php"

	;;
*)
	echo "Usage: $0 {full|ip|db|web}"
	echo "full - Full Server Instalation"
	echo "ip - Server IP Update"
	echo "db - Delete And Create DB"
	echo "web - Install Registration and Server Status"
	exit 1
	;;
esac
